// <auto-generated />
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityLayer.Concrete.Kart", b =>
                {
                    b.Property<int>("KartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KartId"), 1L, 1);

                    b.Property<string>("KartIcerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KartSira")
                        .HasColumnType("int");

                    b.Property<int>("ListeId")
                        .HasColumnType("int");

                    b.HasKey("KartId");

                    b.HasIndex("ListeId");

                    b.ToTable("Kartlar");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Liste", b =>
                {
                    b.Property<int>("ListeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListeId"), 1L, 1);

                    b.Property<string>("ListeAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ListeSira")
                        .HasColumnType("int");

                    b.HasKey("ListeId");

                    b.ToTable("Listeler");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Kart", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Liste", "Liste")
                        .WithMany("Karts")
                        .HasForeignKey("ListeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Liste");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Liste", b =>
                {
                    b.Navigation("Karts");
                });
#pragma warning restore 612, 618
        }
    }
}
